// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ShoppingCartApi.Models;
using System;

namespace ShoppingCartApi.Migrations
{
    [DbContext(typeof(ShoppingCartDbContext))]
    partial class ShoppingCartDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("ShoppingCartApi.Models.Manufacturer", b =>
                {
                    b.Property<Guid>("ManufacturerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ManufacturerCategory");

                    b.Property<string>("ManufacturerEmail");

                    b.Property<string>("ManufacturerName")
                        .IsRequired();

                    b.Property<string>("ManufacturerUrl");

                    b.HasKey("ManufacturerId");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("ShoppingCartApi.Models.ManufacturerCategory", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryDescription");

                    b.Property<string>("CategoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("ManufacturerCategories");
                });

            modelBuilder.Entity("ShoppingCartApi.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<bool>("NotifyShopper");

                    b.Property<DateTime>("OrderDate");

                    b.Property<string>("OrderNo");

                    b.Property<string>("PaymentMethod");

                    b.Property<string>("Shipment");

                    b.Property<string>("Status");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ShoppingCartApi.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Price");

                    b.Property<Guid>("ProductCategory");

                    b.Property<string>("ProductManufacturer");

                    b.Property<string>("ProductMediaFile");

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.Property<string>("ProductSku");

                    b.Property<int>("ShopperReview");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ShoppingCartApi.Models.ProductCategory", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName")
                        .IsRequired();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("ShoppingCartApi.Models.Shopper", b =>
                {
                    b.Property<Guid>("ShopperId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DispalyedName");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<bool>("IsVendor");

                    b.Property<string>("ShopperGroup");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("ShopperId");

                    b.ToTable("Shoppers");
                });
#pragma warning restore 612, 618
        }
    }
}
